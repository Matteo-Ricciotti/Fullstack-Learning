@use "variables.scss" as var;
@use "calculations.scss" as calc;
@use "sass:color";

$padding: calc.px-to-rem(var.$padding);

@mixin article-mixin($color, $border-color, $font-size: 1rem) {
    border: calc.px-to-rem(1) solid $border-color;
    color: $color;
    font-size: $font-size;
}

div {
    border: calc.px-to-rem(1) solid var.$red;
    display: flex;
    flex-direction: column;
    align-items: center;

    &>section:first-of-type {
        display: flex;
        padding: $padding;

        &>article {
            padding: $padding;
        }

        &>article:nth-child(odd) {
            @include article-mixin(blue, green);
        }

        &>article:nth-child(even) {
            @include article-mixin(red, green);
        }
    }

    &>section:nth-of-type(2) {
        width: calc(100% - $padding * 2);
        display: flex;
        justify-content: space-between;
        padding: 0 $padding;

        &>div {
            height: calc.px-to-rem(45);
            width: calc.px-to-rem(45);

            @for $index from 1 through 20 {
                $color: black;
                $color: color.adjust($color, $lightness: 5%*$index);

                $background: color.invert($color);

                @if $index ==10 {
                    $color: var.$red;
                    $background: var.$blue;
                }

                &:nth-child(#{$index}) {
                    background-color: $background;
                    color: $color;
                }
            }
        }
    }

    &>section:last-of-type {
        width: calc(100% - $padding * 2);
        padding: $padding;

        &>article {
            text-align: center;
            padding: $padding;
            @include article-mixin(green, blue, calc.px-to-rem(24))
        }
    }
}

.h1-class {
    color: var.$green;
    text-decoration: underline var.$blue;
}

.h2-class {
    @extend .h1-class;
    text-decoration: none;
    border: calc.px-to-rem(1) solid var.$red;
    padding: 1rem;
}

@each $index in (1, 2, 3) {
    .fs-#{$index}rem {
        font-size: $index + rem;
    }
}